//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LL.MDE.Components.Qvt.Metamodel.EMOF
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Linq;
    using NMF.Expressions;
    using NMF.Expressions.Linq;
    using NMF.Models;
    using NMF.Models.Meta;
    using NMF.Models.Collections;
    using NMF.Models.Expressions;
    using NMF.Collections.Generic;
    using NMF.Collections.ObjectModel;
    using NMF.Serialization;
    using NMF.Utilities;
    using System.Collections.Specialized;
    using NMF.Models.Repository;
    
    
    /// <summary>
    /// The public interface for URIExtent
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(URIExtent))]
    [XmlDefaultImplementationTypeAttribute(typeof(URIExtent))]
    [ModelRepresentationClassAttribute("http://www.omg.org/spec/QVT/20140401/EMOF#//URIExtent")]
    public interface IURIExtent : IModelElement, IExtent
    {
        
        /// <summary>
        /// Gets fired before the operation contextURI gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> ContextURICalling;
        
        /// <summary>
        /// Gets fired after the operation contextURI got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> ContextURICalled;
        
        /// <summary>
        /// Gets fired before the operation element gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> ElementCalling;
        
        /// <summary>
        /// Gets fired after the operation element got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> ElementCalled;
        
        /// <summary>
        /// Gets fired before the operation uri gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> UriCalling;
        
        /// <summary>
        /// Gets fired after the operation uri got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> UriCalled;
        
        /// <summary>
        /// 
        /// </summary>
        string ContextURI();
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="uri"></param>
        IElement Element(string uri);
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="element"></param>
        string Uri(IElement element);
    }
}
