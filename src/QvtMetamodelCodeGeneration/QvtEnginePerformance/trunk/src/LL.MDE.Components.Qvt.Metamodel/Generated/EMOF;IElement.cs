//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LL.MDE.Components.Qvt.Metamodel.EMOF
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Linq;
    using NMF.Expressions;
    using NMF.Expressions.Linq;
    using NMF.Models;
    using NMF.Models.Meta;
    using NMF.Models.Collections;
    using NMF.Models.Expressions;
    using NMF.Collections.Generic;
    using NMF.Collections.ObjectModel;
    using NMF.Serialization;
    using NMF.Utilities;
    using System.Collections.Specialized;
    using NMF.Models.Repository;
    
    
    /// <summary>
    /// The public interface for Element
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Element))]
    [XmlDefaultImplementationTypeAttribute(typeof(Element))]
    [ModelRepresentationClassAttribute("http://www.omg.org/spec/QVT/20140401/EMOF#//Element")]
    public interface IElement : IModelElement, IObject
    {
        
        /// <summary>
        /// The ownedComment property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("ownedComment")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [ConstantAttribute()]
        IOrderedSetExpression<IComment> OwnedComment
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the operation container gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> ContainerCalling;
        
        /// <summary>
        /// Gets fired after the operation container got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> ContainerCalled;
        
        /// <summary>
        /// Gets fired before the operation equals gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> EqualsCalling;
        
        /// <summary>
        /// Gets fired after the operation equals got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> EqualsCalled;
        
        /// <summary>
        /// Gets fired before the operation get gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> GetCalling;
        
        /// <summary>
        /// Gets fired after the operation get got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> GetCalled;
        
        /// <summary>
        /// Gets fired before the operation getMetaClass gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> GetMetaClassCalling;
        
        /// <summary>
        /// Gets fired after the operation getMetaClass got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> GetMetaClassCalled;
        
        /// <summary>
        /// Gets fired before the operation isSet gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> IsSetCalling;
        
        /// <summary>
        /// Gets fired after the operation isSet got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> IsSetCalled;
        
        /// <summary>
        /// Gets fired before the operation set gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> SetCalling;
        
        /// <summary>
        /// Gets fired after the operation set got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> SetCalled;
        
        /// <summary>
        /// Gets fired before the operation unset gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> UnsetCalling;
        
        /// <summary>
        /// Gets fired after the operation unset got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> UnsetCalled;
        
        /// <summary>
        /// 
        /// </summary>
        IElement Container();
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="object"></param>
        bool Equals(IObject @object);
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="property"></param>
        IObject Get(IProperty property);
        
        /// <summary>
        /// 
        /// </summary>
        LL.MDE.Components.Qvt.Metamodel.EMOF.IClass GetMetaClass();
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="property"></param>
        bool IsSet(IProperty property);
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="property"></param>
        /// <param name="object"></param>
        void Set(IProperty property, IObject @object);
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="property"></param>
        void Unset(IProperty property);
    }
}
