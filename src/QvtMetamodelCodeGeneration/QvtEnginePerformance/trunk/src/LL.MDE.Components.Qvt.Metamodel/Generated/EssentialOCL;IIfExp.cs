//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LL.MDE.Components.Qvt.Metamodel.EssentialOCL
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Linq;
    using NMF.Expressions;
    using NMF.Expressions.Linq;
    using NMF.Models;
    using NMF.Models.Meta;
    using NMF.Models.Collections;
    using NMF.Models.Expressions;
    using NMF.Collections.Generic;
    using NMF.Collections.ObjectModel;
    using NMF.Serialization;
    using NMF.Utilities;
    using NMF.Models.Repository;
    using System.Collections.Specialized;
    using LL.MDE.Components.Qvt.Metamodel.EMOF;
    
    
    /// <summary>
    /// The public interface for IfExp
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(IfExp))]
    [XmlDefaultImplementationTypeAttribute(typeof(IfExp))]
    [ModelRepresentationClassAttribute("http://www.omg.org/spec/QVT/20140401/EssentialOCL#//IfExp")]
    public interface IIfExp : IModelElement, IOclExpression
    {
        
        /// <summary>
        /// The condition property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("condition")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IOclExpression Condition
        {
            get;
            set;
        }
        
        /// <summary>
        /// The elseExpression property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("elseExpression")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IOclExpression ElseExpression
        {
            get;
            set;
        }
        
        /// <summary>
        /// The thenExpression property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("thenExpression")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IOclExpression ThenExpression
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Condition property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ConditionChanging;
        
        /// <summary>
        /// Gets fired when the Condition property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ConditionChanged;
        
        /// <summary>
        /// Gets fired before the ElseExpression property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ElseExpressionChanging;
        
        /// <summary>
        /// Gets fired when the ElseExpression property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ElseExpressionChanged;
        
        /// <summary>
        /// Gets fired before the ThenExpression property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ThenExpressionChanging;
        
        /// <summary>
        /// Gets fired when the ThenExpression property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ThenExpressionChanged;
    }
}
