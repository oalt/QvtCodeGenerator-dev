//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LL.MDE.Components.Qvt.Metamodel.EMOF
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Linq;
    using NMF.Expressions;
    using NMF.Expressions.Linq;
    using NMF.Models;
    using NMF.Models.Meta;
    using NMF.Models.Collections;
    using NMF.Models.Expressions;
    using NMF.Collections.Generic;
    using NMF.Collections.ObjectModel;
    using NMF.Serialization;
    using NMF.Utilities;
    using System.Collections.Specialized;
    using NMF.Models.Repository;
    
    
    /// <summary>
    /// The public interface for Type
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Type))]
    [XmlDefaultImplementationTypeAttribute(typeof(Type))]
    [ModelRepresentationClassAttribute("http://www.omg.org/spec/QVT/20140401/EMOF#//Type")]
    public interface IType : IModelElement, INamedElement
    {
        
        /// <summary>
        /// The package property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("package")]
        [XmlAttributeAttribute(true)]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlOppositeAttribute("ownedType")]
        IPackage Package
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the operation isInstance gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> IsInstanceCalling;
        
        /// <summary>
        /// Gets fired after the operation isInstance got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> IsInstanceCalled;
        
        /// <summary>
        /// Gets fired before the Package property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PackageChanging;
        
        /// <summary>
        /// Gets fired when the Package property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PackageChanged;
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="object"></param>
        bool IsInstance(IObject @object);
    }
}
